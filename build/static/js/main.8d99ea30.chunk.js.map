{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contact-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contact-reducer.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","a","get","data","name","number","contact","post","contactId","delete","getAllContacts","state","contacts","items","getFilter","filter","getIsLoading","loading","getFilteredContacts","createSelector","normFilter","toLowerCase","includes","createReducer","_","payload","id","combineReducers","ContactForm","handleInputChange","ev","target","value","setState","handleSubmit","preventDefault","props","find","item","alert","onSubmit","resetForm","this","className","s","wrapper","label","type","onChange","btnSubmit","Component","connect","contactsSelectors","contactsOperations","ContactList","fetchContacts","contactList","onDeleteContact","isLaodingContacts","map","element","btn","onClick","filterValue","onToFilter","App","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d99ea30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactForm_wrapper__1UZH6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"ContactList_element__2P7QV\",\"btn\":\"ContactList_btn__3hBy-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__3p76T\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\n","import axios from \"axios\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from \"./contact-actions.js\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContact = ({ name, number }) => async (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/contacts\", contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nconst deleteContact = (contactId) => async (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n\r\nexport default { fetchContacts, addContact, deleteContact };\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst getIsLoading = (state) => state.contacts.loading;\r\nconst getAllContacts = (state) => state.contacts.items;\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normFilter)\r\n    );\r\n  }\r\n);\r\n\r\nexport default { getIsLoading, getAllContacts, getFilter, getFilteredContacts };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from \"./contact-actions.js\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\r\n\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  // записывает данные введенные в форме\r\n  handleInputChange = (ev) => {\r\n    const { name, value } = ev.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  // отправляет данные введеные в форме\r\n  handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    const { name } = this.state;\r\n    const { contacts } = this.props;\r\n\r\n    const uniqueContact = contacts.find(\r\n      (item) => item.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n    if (uniqueContact) {\r\n      alert(`${name} уже есть в списке ваших контактов`);\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  // очищает форму после отправки\r\n  resetForm = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.wrapper} onSubmit={this.handleSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Phone\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <button className={s.btnSubmit} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (contact) => dispatch(contactsOperations.addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nclass ContactList extends Component {\r\n  static propTypes = {\r\n    contactList: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n  };\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contactList, onDeleteContact, isLaodingContacts } = this.props;\r\n    return (\r\n      <>\r\n        {isLaodingContacts && <h1>Loading..</h1>}\r\n        <ul>\r\n          {contactList.map(({ id, name, number }) => (\r\n            <li className={s.element} key={id}>\r\n              <p>{name}: </p> <p>{number}</p>\r\n              <button\r\n                className={s.btn}\r\n                type=\"button\"\r\n                onClick={() => onDeleteContact(id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst { getIsLoading, getFilteredContacts } = contactsSelectors;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLaodingContacts: getIsLoading(state),\r\n  contactList: getFilteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(contactsOperations.deleteContact(id)),\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { contactsSelectors, changeFilter } from \"../../redux/contacts\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filterValue, onToFilter }) => {\r\n  return (\r\n    <form className={s.wrapper}>\r\n      <label>\r\n        Find contacts by name{\" \"}\r\n        <input type=\"text\" value={filterValue} onChange={onToFilter} />\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterValue: PropTypes.string.isRequired,\r\n  onToFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filterValue: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onToFilter: (ev) => dispatch(changeFilter(ev.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nimport { contactsReducer } from \"./contacts\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}